<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


	<global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled"/>

	<beans:bean id="customerFacade" class="com.salesmanager.web.shop.controller.customer.facade.CustomerFacadeImpl">
	</beans:bean>
	
	<!-- JDBC Customer details -->
	<beans:bean id="customerDetailsService"
		class="com.salesmanager.web.services.security.CustomerServicesImpl">
	</beans:bean>

	<!-- JDBC User details -->
	<beans:bean id="userDetailsService"
		class="com.salesmanager.web.admin.security.UserServicesImpl">
	</beans:bean>
	
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
	</beans:bean>
	
	<beans:bean id="adminAccessDenied"
		class="com.salesmanager.web.utils.AdminAccessDeniedHandler">
		<beans:property name="accessDeniedUrl" value="/admin/denied.html" />
	</beans:bean>

	
	<!-- updates last user logon timestamp -->
	<beans:bean id="userAuthenticationSuccessHandler" class="com.salesmanager.web.admin.security.UserAuthenticationSuccessHandler">
	</beans:bean>
	
	
	<beans:bean id="servicesAuthenticationSuccessHandler" class="com.salesmanager.web.services.security.ServicesAuthenticationSuccessHandler">
	</beans:bean>
	
	<beans:bean id="servicesAuthenticationEntryPoint" class="com.salesmanager.web.services.security.ServicesAuthenticationEntryPoint">
	</beans:bean>
	
	
	
	<http pattern="/admin/**" auto-config="true" use-expressions="true" authentication-manager-ref="userAuthenticationManager">
		<intercept-url pattern="/admin/logon.html*" access="permitAll" />
		<intercept-url pattern="/admin/denied.html" access="permitAll"/>
		<intercept-url pattern="/admin/unauthorized.html" access="permitAll"/>
		<intercept-url pattern="/admin/users/resetPassword.html*" access="permitAll" />
		<intercept-url pattern="/admin/users/resetPasswordSecurityQtn.html*" access="permitAll" /> 
		<intercept-url pattern="/admin" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/*.html*" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/*/*.html*" access="hasRole('AUTH')" />
		<intercept-url pattern="/admin/*/*/*.html*" access="hasRole('AUTH')" />

		
		<form-login 
			login-processing-url="/admin/j_spring_security_check" 
			login-page="/admin/logon.html"
			authentication-success-handler-ref="userAuthenticationSuccessHandler"
			authentication-failure-url="/admin/logon.html?login_error=true"
			default-target-url="/admin/home.html" />
			
			
		<logout invalidate-session="true" 
			logout-success-url="/admin/home.html" 
			logout-url="/admin/j_spring_security_logout" />
		<access-denied-handler ref="adminAccessDenied"/>
	</http>
	

	 <!-- form login beans -->
    <beans:bean id="appAuthenticationEntryPoint"
          class="com.salesmanager.web.shop.security.entry.AppAuthenticationEntryPoint">
        <beans:constructor-arg name="loginFormUrl" value="/shop/customer/loginOrSignUp.html"/>
    </beans:bean>
    
	<http pattern="/shop/**" use-expressions="true" entry-point-ref="appAuthenticationEntryPoint">

		<intercept-url pattern="/shop" access="permitAll" />
		<intercept-url pattern="/shop/" access="permitAll" />
		<intercept-url pattern="/shop/**" access="permitAll" />
		<intercept-url pattern="/shop/customer/logon.html*" access="permitAll" />
		<intercept-url pattern="/shop/customer/registration.html*" access="permitAll" />
		<intercept-url pattern="/shop/customer/loginOrSignUp.html*" access="permitAll" />
		<intercept-url pattern="/auth/**" access="permitAll"/>
		<intercept-url pattern="/shop/customer/customLogon.html*" access="permitAll" />
		<intercept-url pattern="/shop/customer/denied.html" access="permitAll"/>
		<intercept-url pattern="/shop/customer/j_spring_security_check" access="permitAll"/>
		<intercept-url pattern="/shop/customer/j_spring_security_logout" access="permitAll"/>
		<intercept-url pattern="/shop/customer" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/shop/customer/" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/shop/customer/*.html*" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/shop/customer/*.html*" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/shop/customer/*/*.html*" access="hasRole('AUTH_CUSTOMER')" />
		<intercept-url pattern="/shop/customer/*/*/*.html*" access="hasRole('AUTH_CUSTOMER')" />

<!-- Adds social authentication filter to the Spring Security filter chain. -->
		<custom-filter before="PRE_AUTH_FILTER" ref="socialAuthenticationFilter"/>
		<custom-filter position="FORM_LOGIN_FILTER" ref="SecurityAuthFilter"/>
<!--         <custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/> -->
			
		<logout invalidate-session="false" 
			logout-success-url="/shop/" 
			logout-url="/shop/customer/j_spring_security_logout" />
		<access-denied-handler error-page="/shop/"/>
	</http>
	
	<http pattern="/auth/**" use-expressions="true" entry-point-ref="appAuthenticationEntryPoint">

		<intercept-url pattern="/auth/**" access="permitAll"/>

<!-- Adds social authentication filter to the Spring Security filter chain. -->
		<custom-filter before="PRE_AUTH_FILTER" ref="socialAuthenticationFilter"/>
		<custom-filter position="FORM_LOGIN_FILTER" ref="SecurityAuthFilter"/>
<!--         <custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/> -->
			
		<logout invalidate-session="false" 
			logout-success-url="/shop/" 
			logout-url="/shop/customer/j_spring_security_logout" />
		<access-denied-handler error-page="/shop/"/>
	</http>
	
	
	<!-- social login filter which is a pre authentication filter and works for /auth service url -->
    <beans:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <beans:constructor-arg name="authManager" ref="socialAuthenticationManager"/>
        <beans:constructor-arg name="userIdSource" ref="userIdSource"/>
        <beans:constructor-arg name="usersConnectionRepository" ref="inMemoryUsersConnectionRepository"/>
        <beans:constructor-arg name="authServiceLocator" ref="appSocialAuthenticationServiceRegistry"/>
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
    </beans:bean>

	<beans:bean class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
          id="SecurityAuthFilter">
        <beans:property name="authenticationManager" ref="socialAuthenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
        <beans:property name="filterProcessesUrl" value="/shop/customer/j_spring_security_check"/>
        <beans:property name="rememberMeServices" ref="rememberMeServices"/>
    </beans:bean>
	
<!-- 	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"> -->
<!--         <beans:constructor-arg name="logoutSuccessHandler" ref="logoutSuccessHandler"/> -->
<!--         <beans:constructor-arg name="handlers"> -->
<!--             <beans:list> -->
<!--                 <beans:bean name="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/> -->
<!--             </beans:list> -->
<!--         </beans:constructor-arg> -->
<!--     </beans:bean> -->
    
	
	<!--  authentication manager and its provider( social provider deals with social login & local user provider deals with form login ) -->
    <authentication-manager alias="socialAuthenticationManager">
        <authentication-provider ref="socialAuthenticationProvider"/>
        <authentication-provider user-service-ref="customerDetailsService">
        	<password-encoder hash="sha" />
        </authentication-provider>
    </authentication-manager>
	
	<beans:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
        <beans:constructor-arg ref="inMemoryUsersConnectionRepository"/>
        <beans:constructor-arg ref="socialUserDetailService"/>
    </beans:bean>
	
	<beans:bean id="socialUserDetailService" class="com.salesmanager.web.shop.security.service.SocialUserDetailService"/>
	
	<beans:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>

    <!-- inmemory connection repository which holds connection repository per local user -->
    <beans:bean id="inMemoryUsersConnectionRepository"
          class="org.springframework.social.connect.mem.InMemoryUsersConnectionRepository">
        <beans:constructor-arg name="connectionFactoryLocator" ref="appSocialAuthenticationServiceRegistry"/>
        <beans:property name="connectionSignUp" ref="connectionSignUp"/>
    </beans:bean>

    <!-- service registry will holds connection factory of each social provider -->
    <beans:bean id="appSocialAuthenticationServiceRegistry"
          class="com.salesmanager.web.shop.security.registry.AppSocialAuthenticationServiceRegistry">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="facebookAuthenticationService"/>
                <beans:ref bean="twitterAuthenticationService" />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

	<beans:bean id="successHandler" class="com.salesmanager.web.shop.security.handler.AppSuccessHandler"/>
	
	<beans:bean id="failureHandler"
          class="com.salesmanager.web.shop.security.handler.AppFailureHandler">
        <beans:constructor-arg name="defaultFailureUrl" value="/shop/customer/loginOrSignUp.html?login_error=true"/>
    </beans:bean>
	
	 <beans:bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.NullRememberMeServices"/>
		  
    <beans:bean id="logoutSuccessHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler"/>
    
	
	<beans:bean id="facebookAuthenticationService"
          class="org.springframework.social.facebook.security.FacebookAuthenticationService">
        <beans:constructor-arg name="apiKey" value="497745313754563"/>
        <beans:constructor-arg name="appSecret" value="081be2fd3ca3b77c0647c9ac8c5a6d77"/>
    </beans:bean>

    <beans:bean id="twitterAuthenticationService"
          class="org.springframework.social.twitter.security.TwitterAuthenticationService">
        <beans:constructor-arg name="apiKey" value="${twitter.consumer.key}"/>
        <beans:constructor-arg name="appSecret" value="${twitter.consumer.secret}"/>
    </beans:bean>
    
    <!-- If no local user is associated to a social connection then connection sign up will create a new local user and map it to social user -->
    <beans:bean id="connectionSignUp" class="com.salesmanager.web.shop.security.registry.AppConnectionSignUp"/>
	
	<!-- REST services -->
	<http pattern="/services/**" create-session="stateless" use-expressions="true" authentication-manager-ref="userAuthenticationManager" entry-point-ref="servicesAuthenticationEntryPoint">
      <intercept-url pattern="/services/private/**" access="hasRole('AUTH')"/>
      <intercept-url pattern="/services/public/**" access="permitAll"/>
      <form-login authentication-success-handler-ref="servicesAuthenticationSuccessHandler" />
      <http-basic />
    </http>
   
	
	
	<authentication-manager id="userAuthenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="sha" />
		</authentication-provider>
		
	</authentication-manager>
	

	<beans:bean id="jacksonMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>

	<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jacksonMessageConverter"/>
            </beans:list>
        </beans:property>
        <beans:property name="requireSession" value="false"/>
    </beans:bean>

</beans:beans>